// Copyright (c) 2014, Tamas Csala

#ifndef OGLWRAP_ENUMS_PIXEL_STORAGE_MODE_H_
#define OGLWRAP_ENUMS_PIXEL_STORAGE_MODE_H_

#include "../config.h"

namespace oglwrap {

inline namespace enums {

enum class PixelStorageMode : GLenum {
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_PACK_SWAP_BYTES)
  PackSwapBytes = GL_PACK_SWAP_BYTES,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_PACK_LSB_FIRST)
  PackLsbFirst = GL_PACK_LSB_FIRST,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_PACK_ROW_LENGTH)
  PackRowLength = GL_PACK_ROW_LENGTH,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_PACK_SKIP_ROWS)
  PackSkipRows = GL_PACK_SKIP_ROWS,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_PACK_SKIP_PIXELS)
  PackSkipPixels = GL_PACK_SKIP_PIXELS,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_PACK_ALIGNMENT)
  PackAlignment = GL_PACK_ALIGNMENT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_PACK_IMAGE_HEIGHT)
  PackImageHeight = GL_PACK_IMAGE_HEIGHT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_PACK_SKIP_IMAGES)
  PackSkipImages = GL_PACK_SKIP_IMAGES,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_PACK_COMPRESSED_BLOCK_WIDTH)
  PackCompressedBlockWidth = GL_PACK_COMPRESSED_BLOCK_WIDTH,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_PACK_COMPRESSED_BLOCK_HEIGHT)
  PackCompressedBlockHeight = GL_PACK_COMPRESSED_BLOCK_HEIGHT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_PACK_COMPRESSED_BLOCK_DEPTH)
  PackCompressedBlockDepth = GL_PACK_COMPRESSED_BLOCK_DEPTH,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_PACK_COMPRESSED_BLOCK_SIZE)
  PackCompressedBlockSize = GL_PACK_COMPRESSED_BLOCK_SIZE,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_UNPACK_COMPRESSED_BLOCK_WIDTH)
  UnpackCompressedBlockWidth = GL_UNPACK_COMPRESSED_BLOCK_WIDTH,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_UNPACK_COMPRESSED_BLOCK_HEIGHT)
  UnpackCompressedBlockHeight = GL_UNPACK_COMPRESSED_BLOCK_HEIGHT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_UNPACK_COMPRESSED_BLOCK_DEPTH)
  UnpackCompressedBlockDepth = GL_UNPACK_COMPRESSED_BLOCK_DEPTH,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_UNPACK_COMPRESSED_BLOCK_SIZE)
  UnpackCompressedBlockSize = GL_UNPACK_COMPRESSED_BLOCK_SIZE,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_UNPACK_SWAP_BYTES)
  UnpackSwapBytes = GL_UNPACK_SWAP_BYTES,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_UNPACK_LSB_FIRST)
  UnpackLsbFirst = GL_UNPACK_LSB_FIRST,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_UNPACK_ROW_LENGTH)
  UnpackRowLength = GL_UNPACK_ROW_LENGTH,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_UNPACK_SKIP_ROWS)
  UnpackSkipRows = GL_UNPACK_SKIP_ROWS,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_UNPACK_SKIP_PIXELS)
  UnpackSkipPixels = GL_UNPACK_SKIP_PIXELS,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_UNPACK_ALIGNMENT)
  UnpackAlignment = GL_UNPACK_ALIGNMENT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_UNPACK_IMAGE_HEIGHT)
  UnpackImageHeight = GL_UNPACK_IMAGE_HEIGHT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_UNPACK_SKIP_IMAGES)
  UnpackSkipImages = GL_UNPACK_SKIP_IMAGES,
#endif
};

} // enums

} // oglwrap

#endif
