// Copyright (c) 2014, Tamas Csala

#ifndef OGLWRAP_ENUMS_MEMORY_BARRIER_BIT_H_
#define OGLWRAP_ENUMS_MEMORY_BARRIER_BIT_H_

#include "../config.h"

namespace oglwrap {

inline namespace enums {

enum class MemoryBarrierBit : GLenum {
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT)
  VertexAttribArray = GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_ELEMENT_ARRAY_BARRIER_BIT)
  ElementArray = GL_ELEMENT_ARRAY_BARRIER_BIT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_UNIFORM_BARRIER_BIT)
  Uniform = GL_UNIFORM_BARRIER_BIT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_TEXTURE_FETCH_BARRIER_BIT)
  TextureFetch = GL_TEXTURE_FETCH_BARRIER_BIT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_SHADER_IMAGE_ACCESS_BARRIER_BIT)
  ShaderImageAccess = GL_SHADER_IMAGE_ACCESS_BARRIER_BIT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_COMMAND_BARRIER_BIT)
  Command = GL_COMMAND_BARRIER_BIT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_PIXEL_BUFFER_BARRIER_BIT)
  PixelBuffer = GL_PIXEL_BUFFER_BARRIER_BIT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_TEXTURE_UPDATE_BARRIER_BIT)
  TextureUpdate = GL_TEXTURE_UPDATE_BARRIER_BIT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_BUFFER_UPDATE_BARRIER_BIT)
  BufferUpdate = GL_BUFFER_UPDATE_BARRIER_BIT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_FRAMEBUFFER_BARRIER_BIT)
  Framebuffer = GL_FRAMEBUFFER_BARRIER_BIT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_TRANSFORM_FEEDBACK_BARRIER_BIT)
  TransformFeedback = GL_TRANSFORM_FEEDBACK_BARRIER_BIT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_ATOMIC_COUNTER_BARRIER_BIT)
  AtomicCounter = GL_ATOMIC_COUNTER_BARRIER_BIT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_SHADER_STORAGE_BARRIER_BIT)
  ShaderStorage = GL_SHADER_STORAGE_BARRIER_BIT,
#endif
#if OGLWRAP_DEFINE_EVERYTHING || defined(GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT)
  ClientMappedBuffer = GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT,
#endif
};

} // enums

} // oglwrap

#endif
