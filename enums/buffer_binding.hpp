#ifndef OGLWRAP_ENUMS_BUFFER_BINDING_HPP_
#define OGLWRAP_ENUMS_BUFFER_BINDING_HPP_

#include "../config.hpp"

namespace oglwrap {

inline namespace enums {

enum class BufferBinding : GLenum {
#if !OGLWRAP_CHECK_DEPENDENCIES || defined(GL_ARRAY_BUFFER_BINDING)
  Array = GL_ARRAY_BUFFER_BINDING,
#endif
#if !OGLWRAP_CHECK_DEPENDENCIES || defined(GL_ATOMIC_COUNTER_BUFFER_BINDING)
  AtomicCounter = GL_ATOMIC_COUNTER_BUFFER_BINDING,
#endif
// Note: these two do not end with _BINDING
#if !OGLWRAP_CHECK_DEPENDENCIES || defined(GL_COPY_READ_BUFFER)
  CopyRead = GL_COPY_READ_BUFFER,
#endif
#if !OGLWRAP_CHECK_DEPENDENCIES || defined(GL_COPY_WRITE_BUFFER)
  CopyWrite = GL_COPY_WRITE_BUFFER,
#endif
#if !OGLWRAP_CHECK_DEPENDENCIES || defined(GL_DISPATCH_INDIRECT_BUFFER_BINDING)
  DispatchIndirect = GL_DISPATCH_INDIRECT_BUFFER_BINDING,
#endif
#if !OGLWRAP_CHECK_DEPENDENCIES || defined(GL_DRAW_INDIRECT_BUFFER_BINDING)
  DrawIndirect = GL_DRAW_INDIRECT_BUFFER_BINDING,
#endif
#if !OGLWRAP_CHECK_DEPENDENCIES || defined(GL_ELEMENT_ARRAY_BUFFER_BINDING)
  ElementArray = GL_ELEMENT_ARRAY_BUFFER_BINDING,
#endif
#if !OGLWRAP_CHECK_DEPENDENCIES || defined(GL_PIXEL_PACK_BUFFER_BINDING)
  PixelPack = GL_PIXEL_PACK_BUFFER_BINDING,
#endif
#if !OGLWRAP_CHECK_DEPENDENCIES || defined(GL_PIXEL_UNPACK_BUFFER_BINDING)
  PixelUnpack = GL_PIXEL_UNPACK_BUFFER_BINDING,
#endif
#if !OGLWRAP_CHECK_DEPENDENCIES || defined(GL_SHADER_STORAGE_BUFFER_BINDING)
  ShaderStorage = GL_SHADER_STORAGE_BUFFER_BINDING,
#endif
// Note: It's not BUFFER_BINDING but BINDING_BUFFER.
#if !OGLWRAP_CHECK_DEPENDENCIES || defined(GL_TEXTURE_BINDING_BUFFER)
  Texture = GL_TEXTURE_BINDING_BUFFER,
#endif
#if !OGLWRAP_CHECK_DEPENDENCIES || defined(GL_TRANSFORM_FEEDBACK_BUFFER_BINDING)
  TransformFeedback = GL_TRANSFORM_FEEDBACK_BUFFER_BINDING,
#endif
#if !OGLWRAP_CHECK_DEPENDENCIES || defined(GL_UNIFORM_BUFFER_BINDING)
  Uniform = GL_UNIFORM_BUFFER_BINDING,
#endif
};

} // enums

} // oglwrap

#endif
